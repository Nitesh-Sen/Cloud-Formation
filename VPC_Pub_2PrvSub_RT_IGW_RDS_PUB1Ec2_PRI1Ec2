AWSTemplateFormatVersion: "2010-09-09"
Description: "create the VPC"
Parameters:
   keyvalue:
    Description: Select the key name 
    Type: AWS::EC2::KeyPair::KeyName
   Env:
    Description: Env
    Type: String 
    AllowedValues:
      - dev 
      - stage 
      - prod 
    Default: prod
   instancesize:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
Mappings:
  AMIs: 
    us-east-1:
      Linux: ami-05fa00d4c63e32376
      RedHat: ami-06640050dc3f556bb
      Ubuntu: ami-052efd3df9dad4825
Resources:

  #VPC
  MYVPC: 
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags: 
        - 
          Key: Name
          Value: NiteshVPC
  #SUBNET
  PUBsubnet: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref MYVPC
      AvailabilityZone: "us-east-1a"
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: "true"
  PRISubnet01:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MYVPC
      AvailabilityZone: "us-east-1a"
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: "false"
  PRISubnet02:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MYVPC
      AvailabilityZone: "us-east-1b"
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: "false"
  
  #Internet Gateway
  PUBigw:
    Type: "AWS::EC2::InternetGateway"
  GTInternet:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      VpcId: !Ref MYVPC
      InternetGatewayId: !Ref PUBigw

  #Public Routing
  PUBrt:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MYVPC

  Publicrt:
    Type: "AWS::EC2::Route"
    DependsOn: GTInternet
    Properties: 
      RouteTableId: !Ref PUBrt
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref PUBigw
  
  PUBsubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      SubnetId: !Ref PUBsubnet
      RouteTableId: !Ref PUBrt

  # NAT GATEWAY
#  NatGTW:
 #   Type: AWS::EC2::NatGateway
  #  DependsOn: NATGatewayEIP
   # Properties: 
    #  SubnetId: !Ref PUBsubnet
     # AllocationId: !GetAtt NATGatewayEIP.AllocationId
  
  ## ELASTIC IP
  #NATGatewayEIP:
   # Type: AWS::EC2::EIP
    #DependsOn: MYVPC
    #Properties:
    #  Domain: vpc 

  ## PRIVATE ROUTING
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MYVPC
  
#  PrivateRoute:
 #   Type: AWS::EC2::Route
  #  Properties:
   #   NatGatewayId: !Ref NatGTW
    #  RouteTableId: !Ref PrivateRouteTable
     # DestinationCidrBlock: 0.0.0.0/0
 
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PRISubnet01
      RouteTableId: !Ref PrivateRouteTable
 
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PRISubnet02
      RouteTableId: !Ref PrivateRouteTable
  
  ##Subnet Group
  myDBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties:  
      DBSubnetGroupDescription: create a subnetgroup for RDS
      DBSubnetGroupName: myDBSubnetGroup1
      SubnetIds: 
        - !Ref PRISubnet01
        - !Ref PRISubnet02 
      Tags: 
        - 
          Key: Name
          Value: dbsubnet

  ##Security Group For RDS
  ForInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref MYVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  #create the RDS
  RDSDBInstance:
        Type: AWS::RDS::DBInstance
        DependsOn: 
          - myDBSubnetGroup
          - ForInstanceSecurityGroup
        Properties:
            DBInstanceIdentifier: nitesh-ka-database-77
            AllocatedStorage: 100
            DBInstanceClass: db.t4g.micro
            Engine: "MySQL"
            MasterUsername: "nitu"
            MasterUserPassword: "12345678"
            BackupRetentionPeriod: 1
            MultiAZ: false
            EngineVersion: 8.0.28
            AutoMinorVersionUpgrade: true
            Iops: 1000
            PubliclyAccessible: false
            StorageType: io1
            Port: 3306
            StorageEncrypted: true
            CopyTagsToSnapshot: false
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: true
            PerformanceInsightsRetentionPeriod: 7
            DeletionProtection: false
            MaxAllocatedStorage: 1000
            VPCSecurityGroups: 
              - Ref: ForInstanceSecurityGroup
            DBSubnetGroupName: 
             Ref: myDBSubnetGroup
            Tags: 
              - Key: Name
                Value: database-7

  #security groups for all instaces
  InstanceSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: "my-SuGi"
        VpcId: 
         Ref: MYVPC
        GroupName: "Instance-SG"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '80'
            ToPort: '80'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '443'
            ToPort: '443'
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: '22'
            ToPort: '22'
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: "-1"
            FromPort: '0'
            ToPort: '0'
            CidrIp: 0.0.0.0/0



  #I Love My Instance1
  MyEC2Instance: 
      Type: AWS::EC2::Instance
      DependsOn: MYVPC
      Properties: 
        ImageId: !FindInMap [ AMIs, us-east-1, Linux ]
        SubnetId: !Ref PUBsubnet
        KeyName:
         Ref: keyvalue
        AvailabilityZone: "us-east-1a"
        InstanceType: 
           Ref: instancesize
        SecurityGroupIds: 
          - Ref: InstanceSecurityGroup
        UserData: !Base64 |
          #!/bin/bash -ex
          yum update -y 
          yum install httpd -y
          service httpd enable || systemctl enable httpd
          sudo service httpd start || sudo systemctl start httpd
          echo "<h1><font size = "10"color='red">amit sir zindhabad the</font><br /></h1><h2> <font size = "10"color="pink">amit sir zindhabad hai</font><br /></h2><h3> <font size = "10"color="orenge">amit sir zindhabad rhenge</font><br /></h3>" >> /var/www/html/index.html
        Tags:
          - Key: "Name"
            Value: "web"

  #private Instance
  MyEC2Instance1: 
      Type: AWS::EC2::Instance
      DependsOn: MYVPC
      Properties: 
        ImageId: !FindInMap [ AMIs, us-east-1, Ubuntu ]
        SubnetId: !Ref PRISubnet02
        KeyName:
         Ref: keyvalue
        AvailabilityZone: "us-east-1b"
        InstanceType: 
           Ref: instancesize
        SecurityGroupIds: 
          - Ref: InstanceSecurityGroup
        Tags:
          - Key: "Name"
            Value: "app"
